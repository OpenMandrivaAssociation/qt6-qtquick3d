diff -up qtquick3d-everywhere-src-6.4.0-beta2/src/3rdparty/embree/common/sys/vector.h.omv~ qtquick3d-everywhere-src-6.4.0-beta2/src/3rdparty/embree/common/sys/vector.h
--- qtquick3d-everywhere-src-6.4.0-beta2/src/3rdparty/embree/common/sys/vector.h.omv~	2022-07-21 23:36:03.560832385 +0200
+++ qtquick3d-everywhere-src-6.4.0-beta2/src/3rdparty/embree/common/sys/vector.h	2022-07-21 23:58:25.182339874 +0200
@@ -134,7 +134,7 @@ namespace embree
       {
         /* destroy elements */
         for (size_t i=0; i<size_active; i++)
-          alloc.destroy(&items[i]);
+          std::allocator_traits<decltype(alloc)>::destroy(alloc, &items[i]);
         
         /* free memory */
         alloc.deallocate(items,size_alloced); 
@@ -179,7 +179,7 @@ namespace embree
         if (new_active < size_active) 
         {
           for (size_t i=new_active; i<size_active; i++)
-            alloc.destroy(&items[i]);
+            std::allocator_traits<decltype(alloc)>::destroy(alloc, &items[i]);
           size_active = new_active;
         }
 
@@ -195,7 +195,7 @@ namespace embree
         items = alloc.allocate(new_alloced);
         for (size_t i=0; i<size_active; i++) {
           ::new (&items[i]) T(std::move(old_items[i]));
-          alloc.destroy(&old_items[i]);
+	  std::allocator_traits<decltype(alloc)>::destroy(alloc, &old_items[i]);
         }
 
         for (size_t i=size_active; i<new_active; i++) {
